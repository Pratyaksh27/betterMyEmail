(()=>{"use strict";class e{static getFeedbackData(){return{totalUses:localStorage.getItem(e.totalUsesKey),lastFeedbackTime:localStorage.getItem(e.lastFeedbackTimeKey),lastFeedbackGiven:localStorage.getItem(e.lastFeedbackGivenKey),usesSinceLastFeedback:localStorage.getItem(e.usesSinceLastFeedbackKey)}}static resetFeedbackData(){localStorage.removeItem(e.totalUsesKey),localStorage.removeItem(e.lastFeedbackTimeKey),localStorage.removeItem(e.lastFeedbackGivenKey),localStorage.removeItem(e.usesSinceLastFeedbackKey)}static incrementUsage(){let t=parseInt(localStorage.getItem(e.totalUsesKey)||"0");t++,localStorage.setItem(e.totalUsesKey,t.toString());let n=parseInt(localStorage.getItem(e.usesSinceLastFeedbackKey)||"0");n++,localStorage.setItem(e.usesSinceLastFeedbackKey,n.toString()),console.log("Incremented usage"),console.log("Total Uses: "+t),console.log("Uses Since Last Feedback: "+n)}static shouldShowFeedbackPopup(){const t=localStorage.getItem(e.lastFeedbackGivenKey||"false"),n=parseInt(localStorage.getItem(e.usesSinceLastFeedbackKey)||"0");if(null===localStorage.getItem(e.lastFeedbackGivenKey)&&localStorage.setItem(e.lastFeedbackGivenKey,"false"),"true"===t){let t=n>=5;return t&&localStorage.setItem(e.usesSinceLastFeedbackKey,"0"),t}if("false"===t){let t=n>=3;return t&&localStorage.setItem(e.usesSinceLastFeedbackKey,"0"),t}return!1}}e.totalUsesKey="totalUses",e.lastFeedbackTimeKey="lastFeedbackTime",e.lastFeedbackGivenKey="lastFeedbackGiven",e.usesSinceLastFeedbackKey="usesSinceLastFeedback";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let n;const o=new Uint8Array(16);function a(){if(!n){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");n=crypto.getRandomValues.bind(crypto)}return n(o)}const l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).slice(1));const i=function(e,n,o){if(t.randomUUID&&!n&&!e)return t.randomUUID();const i=(e=e||{}).random||(e.rng||a)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,n){o=o||0;for(let e=0;e<16;++e)n[o+e]=i[e];return n}return function(e,t=0){return(l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]).toLowerCase()}(i)};var r=function(e,t,n,o){return new(n||(n=Promise))((function(a,l){function i(e){try{s(o.next(e))}catch(e){l(e)}}function r(e){try{s(o.throw(e))}catch(e){l(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,r)}s((o=o.apply(e,t||[])).next())}))};console.log("betterMyEmailPlugin.js - Start");const s=new class{constructor(){this.selectedRating=null}injectFeedbackForm(){return e=this,t=void 0,o=function*(){try{const e=yield fetch(chrome.runtime.getURL("dist/client/user_feedback/feedbackForm.html")),t=yield e.text(),n=document.createElement("div");n.innerHTML=t.trim();const o=n.querySelector("style");o?document.head.appendChild(o):console.error("Feedback form styles not found in the loaded HTML.");const a=n.querySelector("#feedbackFormContainer");a?(document.body.appendChild(a),this.initializeFeedbackFormEvents()):console.error("Feedback form container not found in the loaded HTML.")}catch(e){console.error("Error loading feedback form HTML:",e)}},new((n=void 0)||(n=Promise))((function(a,l){function i(e){try{s(o.next(e))}catch(e){l(e)}}function r(e){try{s(o.throw(e))}catch(e){l(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,r)}s((o=o.apply(e,t||[])).next())}));var e,t,n,o}initializeFeedbackFormEvents(){const e=document.getElementById("feedbackCloseBtn"),t=document.getElementById("feedbackSubmitBtn"),n=document.getElementById("feedbackEmojiContainer"),o=document.getElementById("feedbackText");e&&(e.onclick=()=>{this.hideFeedbackForm()}),t&&(t.onclick=()=>{const e=o.value.trim();this.selectedRating||e?(this.submitFeedback(this.selectedRating,e),this.hideFeedbackForm()):alert("Please provide a rating or some text feedback.")}),n&&n.addEventListener("click",(e=>{const t=e.target;t.dataset.value&&(this.selectedRating=parseInt(t.dataset.value,10),Array.from(n.children).forEach((e=>{e.style.filter="none"})),t.style.filter="drop-shadow(0 0 5px #1a73e8)")}))}showFeedbackForm(){console.log("Feedback UI : Will display feedback form"),document.getElementById("feedbackFormContainer")&&console.log("Feedback UI : Feedback Form Found")}hideFeedbackForm(){const e=document.getElementById("feedbackFormContainer");e&&(e.style.display="none"),this.selectedRating=null;const t=document.getElementById("feedbackText");t&&(t.value="")}submitFeedback(e,t){console.log("Submitted Feedback:",{rating:e,feedbackText:t})}};function c(t){return r(this,void 0,void 0,(function*(){e.incrementUsage(),console.log("betterMyEmailPlugin.ts: Inside fetchBetterMyEmailAPI"),document.getElementById("betterMyEmailSpinner").style.display="block";const t=document.querySelector('[role="textbox"][aria-label*="Message Body"]'),n=t?t.textContent:"";console.log("betterMyEmailPlugin.ts fetchBetterMyEmailAPI() Email Content: ",n);try{const t=yield new Promise(((e,t)=>{chrome.storage.sync.get(["config"],(function(n){n.config?(console.log("betterMyEmailPlugin.ts: getConfigs() Configs found: ",n.config),e(n.config)):(console.log("betterMyEmailPlugin.ts: getConfigs() Configs NOT found"),t(new Error("Configs not found")))}))}));console.log("betterMyEmailPlugin.ts fetchBetterMyEmailAPI() Configs: ",t),t&&t.analysis_URL?(console.log("betterMyEmailPlugin.ts fetchBetterMyEmailAPI() API Gateway URL: ",t.analysis_URL),yield fetch(`${t.analysis_URL}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({emailContent:n})}).then((e=>(console.log("betterMyEmailPlugin.ts: Printing Better my Email Analysis Response: "),console.log("betterMyEmailPlugin.ts: Better my Email Analysis Response: ",e),e.json()))).then((t=>{if(!t)return void console.error("betterMyEmailPlugin.ts Error: Data received from Better my Email Analysis");if(!t.analysisResult)return void console.error("betterMyEmailPlugin.ts Error: Data does not have a analysisResult property");let n;try{const e=t.analysisResult.replace(/```json|```/g,"").trim();n=JSON.parse(e)}catch(e){return console.error("betterMyEmailPlugin.ts Error: Parsing analysisResult JSON: ",e),void console.error("Received BetterMyEmail analysisResult JSON: ",t.analysisResult)}const o=n.recommended_email,a=n.rationale;console.log("betterMyEmailPlugin.ts: Recommended Email: ",o),console.log("betterMyEmailPlugin.ts: Rationale: ",a),document.getElementById("betterMyEmailSpinner").style.display="none",function(t){const n=document.getElementById("betterMyEmailDialog"),o=document.getElementById("betterMyEmailDialogContent"),a=document.getElementById("acceptButton"),l=document.getElementById("discardButton");if(!(n&&o&&a&&l))return void console.error("betterMyEmailPlugin.ts: Dialog element not found");const i=t.recommendedEmail.replace(/\n/g,"<br>");let r="";if("string"==typeof t.rationale)r=t.rationale.replace(/\n/g,"<br>");else if("object"==typeof t.rationale)for(const[e,n]of Object.entries(t.rationale))r+="string"==typeof n?`<strong>${e}:</strong> ${n.replace(/\n/g,"<br>")}<br>`:`<strong>${e}:</strong> ${n}<br>`;else r="No rationale provided.";o.innerHTML=`\n        <h2>Recommended Email:</h2>\n        <div id="recommendedEmailContent">${i}</div>\n        <h2>Rationale for the Recommendation:</h2>\n        <div>${r}</div>\n        `,n.showModal(),a.onclick=function(){e.shouldShowFeedbackPopup()&&(console.log("betterMyEmailPlugin.ts Accept Button Clicked: Showing Feedback Form"),s.showFeedbackForm()),function(e){const t=document.querySelector('[role="textbox"][aria-label*="Message Body"]');t?t.innerHTML=e.replace(/\n/g,"<br>"):console.error("betterMyEmailPlugin.ts: Email Content Element not found")}(t.recommendedEmail),n.close()},l.onclick=function(){e.shouldShowFeedbackPopup()&&(console.log("betterMyEmailPlugin.ts Discard Button Clicked: Showing Feedback Form"),s.showFeedbackForm()),n.close()},n.addEventListener("close",(function(){console.log("betterMyEmailPlugin.ts: Dialog closed")}))}({recommendedEmail:o,rationale:a})})).catch((e=>{console.error("betterMyEmailPlugin.ts: Error in Better my Email Analysis: ",e)}))):console.error("betterMyEmailPlugin.ts fetchBetterMyEmailAPI() Configs not found")}catch(e){console.error("betterMyEmailPlugin.ts: Error in Better my Email Analysis: ",e)}}))}function d(){const e=document.querySelector('[role="button"][aria-label*="Send"], [role="button"][data-tooltip*="Send"]');if(e&&e.parentNode){if(!e.nextSibling||"Better My Email"!==e.nextSibling.textContent){const t=function(){const e=document.createElement("button");return e.textContent="Better My Email",e.style.cssText="background-color: #1a73e8; color: white; padding: 5px 5px; cursor: pointer; display: inline-block; margin-left: 0px;",e.onclick=c,e}();e.parentNode.insertBefore(t,e.nextSibling)}console.log("betterMyEmailPlugin.js: Send Button Found")}else setTimeout(d,1e3)}s.injectFeedbackForm().then((()=>{console.log("Feedback Form injected successfully")})),function(){console.log("Script executing immediately after load"),function(){let e=localStorage.getItem("userUUID");e&&null!==e&&"null"!==e&&"undefined"!==e&&""!==e?console.log("Existing User with UUID: ",e):(e=i(),null!==e&&localStorage.setItem("userUUID",e.toString()))}();new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.length>0&&d()}))})).observe(document.body,{childList:!0,subtree:!0}),d(),document.body.insertAdjacentHTML("beforeend",'\n        <dialog id="betterMyEmailDialog" style="width: 750px !important;">\n            <form method="dialog">\n                <h1>Better My Email Result:</h1>\n                <p id="betterMyEmailDialogContent"></p>\n                <menu>\n                    <button id="acceptButton" type="button">Accept</button>\n                    <button id="discardButton" type="button">Discard</button>\n                </menu>\n            </form>\n    '),document.body.insertAdjacentHTML("beforeend",'\n        <div id="betterMyEmailSpinner" style="display:none; position: fixed; z-index: 999; top: 50%; left: 50%; transform: translate(-50%, -50%);">\n            <div style="border: 8px solid #f3f3f3; border-radius: 50%; border-top: 8px solid #3498db; width: 60px; height: 60px; -webkit-animation: spin 2s linear infinite; animation: spin 2s linear infinite;"></div>\n        </div>\n\n        <style>\n            @-webkit-keyframes spin {\n            0% { -webkit-transform: rotate(0deg); }\n            100% { -webkit-transform: rotate(360deg); }\n            }\n\n            @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n            }\n        </style>\n    ')}()})();